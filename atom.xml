<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>bigdataxy</title>
  
  
  <link href="http://bigdata-xy.github.io/atom.xml" rel="self"/>
  
  <link href="http://bigdata-xy.github.io/"/>
  <updated>2022-10-30T08:14:03.345Z</updated>
  <id>http://bigdata-xy.github.io/</id>
  
  <author>
    <name>bigdataxy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【博客搭建3】利用Typora软件编写个人博客</title>
    <link href="http://bigdata-xy.github.io/post/Sakura%E4%B8%BB%E9%A2%98%E7%9A%84%E9%85%8D%E7%BD%AE.html"/>
    <id>http://bigdata-xy.github.io/post/Sakura%E4%B8%BB%E9%A2%98%E7%9A%84%E9%85%8D%E7%BD%AE.html</id>
    <published>2022-10-30T08:00:55.000Z</published>
    <updated>2022-10-30T08:14:03.345Z</updated>
    
    <content type="html"><![CDATA[<p>在前期博客搭建及背景设置完成后，可在站点目录下右键Hexo Bash Here，通过<code>hexo new &quot;title&quot;</code>命令，在\Blog\source\ _posts目录下生成以title命名的.md文档，这里强烈推荐Typora编写Markdown，干净简洁的界面看着很舒服。</p><h3 id="软件下载与配置"><a href="#软件下载与配置" class="headerlink" title="软件下载与配置"></a>软件下载与配置</h3><h4 id="Typora编译器的安装"><a href="#Typora编译器的安装" class="headerlink" title="Typora编译器的安装"></a>Typora编译器的安装</h4><p>Typora下载官网：<a href="https://www.typora.net/">Typora</a>，根据自己的电脑配置自行安装下载。</p>]]></content>
    
    
    <summary type="html">记录如何完成一篇博客的步骤</summary>
    
    
    
    <category term="技术" scheme="http://bigdata-xy.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="技术" scheme="http://bigdata-xy.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>【博客搭建2】Sakura主题的配置</title>
    <link href="http://bigdata-xy.github.io/post/Sakura%E4%B8%BB%E9%A2%98%E7%9A%84%E9%85%8D%E7%BD%AE.html"/>
    <id>http://bigdata-xy.github.io/post/Sakura%E4%B8%BB%E9%A2%98%E7%9A%84%E9%85%8D%E7%BD%AE.html</id>
    <published>2022-10-29T06:15:55.000Z</published>
    <updated>2022-10-29T11:02:55.778Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo有许多的个性化主题可供选择，可通过Hexo官网<a href="https://hexo.io/themes/index.html">Themes | Hexo</a>进行查看，我的个人博客是使用的Sakura主题，github地址为<a href="https://github.com/honjun/hexo-theme-sakura">honjun&#x2F;hexo-theme-sakura (github.com)</a>，下面按照我的修改内容进行记录。</p><h3 id="主题下载安装"><a href="#主题下载安装" class="headerlink" title="主题下载安装"></a>主题下载安装</h3><h4 id="github下载安装包"><a href="#github下载安装包" class="headerlink" title="github下载安装包"></a>github下载安装包</h4><p>进入上述github地址，点击 **Download ZIP ** 下载压缩包，压缩包里面就已经配置好了很多source内容，为后面省去很多麻烦。 </p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221029144837187.png" alt="image-20221029144837187" style="zoom: 33%;" /></div><p>下载好之后解压到博客根目录（此时会有提示有重复文件，点击替换文件）。接着在cmd中运行<code>nmp i</code>安装依赖。</p><h4 id="相关文件介绍"><a href="#相关文件介绍" class="headerlink" title="相关文件介绍"></a>相关文件介绍</h4><p>该部分主要简单介绍各文件的作用，方便在对应位置进行修改，知道后会对该主题结构更加清晰，同时方便站点维护，也可以跳过该部分，直接按照之后的步骤进行操作即可。</p><div align=center><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3dhbmcxMzc1ODMwMjQyL1BpY0dvLy9pbWcvMjAyMDAzMTMwOTU0MTYucG5n?x-oss-process=image/format,png" alt="img" style="zoom: 50%;" /></div><ul><li><p>languages 这个文件夹中存放的是语言文件，主要是博客中的一些字符以简体中文、繁体中文、英文显示的定义。</p></li><li><p>layout 这个是布局文件夹，所有的博客页面HTML和JavaScript以ejs模板存放在这，</p><ul><li>Search 这里存放的是页内搜索的ejs文件</li><li>_partial 这里的和 _widget 都是公共的页面，可以引入到HTML的任意位置</li></ul></li><li><p>source 这个文件夹和博客根目录下的source文件夹是一样的，都是为了存放主题相关的文件</p><ul><li>css 这里存放css文件</li><li>fonts 字体文件</li><li>images 图片</li><li>js js文件</li></ul></li><li><p>_config.yml文件，主题配置文件。</p></li></ul><h3 id="CDN搭建"><a href="#CDN搭建" class="headerlink" title="CDN搭建"></a>CDN搭建</h3><p>国内加载github的资源比较慢，需要使用CDN加速来优化网站打开速度，于是使用jsDeliver+github搭建免费的cdn。jsDelivr 是一个免费开源的 CDN 解决方案，用于帮助开发者和站长。包含 JavaScript 库、jQuery 插件、CSS 框架、字体等等 Web 上常用的静态资源。</p><p>这里可以理解为，在github创建一个素材库，可以存放图片，视频，音乐等资源，对存放的资源可以直接通过链接进行访问，这里借助jsDeliver加速素材的访问。之后站点各模块的头像、背景以及文章内容图片均会运用该方式进行访问及存储。</p><h4 id="第一步：创建github仓库"><a href="#第一步：创建github仓库" class="headerlink" title="第一步：创建github仓库"></a>第一步：创建github仓库</h4><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221029170216177.png" alt="image-20221029170216177" style="zoom:50%;" /></div><h4 id="第二步：克隆Github仓库到本地"><a href="#第二步：克隆Github仓库到本地" class="headerlink" title="第二步：克隆Github仓库到本地"></a>第二步：克隆Github仓库到本地</h4><p>在任意目录创建一个空文件，右键进入Git Bash Here，输入<code>git clone + 仓库连接</code></p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221029165834269.png" alt="image-20221029165834269" style="zoom: 50%;" /></div><p>之后对仓库会克隆到本地，对cdn进行相关操作，这里的操作为你想建立的一些列路径和加进去的图片。</p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221029170112287.png" alt="image-20221029170112287" style="zoom: 80%;" /></div><p>我这里是这样的。</p><h4 id="第三步：上传需要的资源"><a href="#第三步：上传需要的资源" class="headerlink" title="第三步：上传需要的资源"></a>第三步：上传需要的资源</h4><p>在进入cdn目录，右键Git Bash Here，对操作好的文件进行提交。</p><pre><code>// 查看状态git status// 初始化git init// 添加到库中（点有空格）git add .// 提交更新（引号内 为自定义信息说明）git commit -m &#39;提交说明&#39;// 推送至远程仓库 git push origin main</code></pre><h4 id="第四步：发布仓库"><a href="#第四步：发布仓库" class="headerlink" title="第四步：发布仓库"></a>第四步：发布仓库</h4><p>点击Draft a new release建立发布版本</p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221029170846968.png" alt="image-20221029170846968" style="zoom: 33%;" /></div><p>进行版本号自定义，版本号是为你最新一次的更新内容做个标签，若你之后再次更新，需要再次更新版本号，之前的版本号同样可以使用，只不过没有新更新的内容。</p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221029171251521.png" alt="image-20221029171251521" style="zoom: 33%;" /></div><p>对于更新内容不多的情况下，可以直接在github进行操作。</p><h4 id="第五步：通过jsDeliver引用资源"><a href="#第五步：通过jsDeliver引用资源" class="headerlink" title="第五步：通过jsDeliver引用资源"></a>第五步：通过jsDeliver引用资源</h4><p>使用方法：</p><p><code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code></p><p>例如：</p><p><code>https://cdn.jsdelivr.net/gh/Bigdata-xy/cdn@1.01/img/custom/avatar.jpg </code></p><p><font size = 1>注意：版本号不是必需的，是为了区分新旧资源，如果不适用版本号，将会直接引用最新资源。</font></p><h3 id="文件修改"><a href="#文件修改" class="headerlink" title="文件修改"></a>文件修改</h3><h4 id="blog目录下的-config配置"><a href="#blog目录下的-config配置" class="headerlink" title="blog目录下的_config配置"></a>blog目录下的_config配置</h4><p>blog目录下的_config.yml文件，对该文件进行如下修改：</p><ul><li>修改**title: **  与 **author:**。</li><li>将 <strong>url</strong>的值修改为网站主URl（如：<a href="http://xxx.github.io)/">http://xxx.github.io）</a></li><li>建议修改permalink，可修改为短连接。安装插件<code> npm install hexo-abbrlink --save</code></li></ul><p>主题配置文件修改和添加：</p><pre><code> #permalink: :year/:month/:day/:title/ #主题默认文章链接配置 permalink: post/:abbrlink.html #修改  ## 启用算法生成不重复文件编号，添加 abbrlink:       alg: crc16   #算法： crc16(default) and crc32       rep: hex   #进制： dec(default) and hex: dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</code></pre><h4 id="主题目录下的-config配置"><a href="#主题目录下的-config配置" class="headerlink" title="主题目录下的_config配置"></a>主题目录下的_config配置</h4><p>其中标明【改】的是需要修改部门，标明【选】是可改可不改（建议不用改），标明【非】是不用改的部分。</p><pre><code># site name# 站点名，即网站的左上角的名称 【改】prefixName: さくら荘そのsiteName: hojun# favicon and site master avatar# 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】favicon: /images/favicon.icoavatar: /img/custom/avatar.jpg# 站点url 【改为自己的博客的网址】url: https://sakura.hojun.cn# 站点介绍（或者说是个人签名）【改】description: Live your life with passion! With some drive!# 站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpgcdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6# 开启pjax 【选】pjax: 1# 站点首页的公告信息 【改】notice: hexo-Sakura主题已经开源，目前正在开发中...# 懒加载的加载中图片 【选】lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg# 站点菜单配置 【选】menus:  首页: &#123; path: /, fa: fa-fort-awesome faa-shake &#125;  归档: &#123; path: /archives, fa: fa-archive faa-shake, submenus: &#123;     技术: &#123;path: /categories/技术/, fa: fa-code &#125;,     生活: &#123;path: /categories/生活/, fa: fa-file-text-o &#125;,     资源: &#123;path: /categories/资源/, fa: fa-cloud-download &#125;,     随想: &#123;path: /categories/随想/, fa: fa-commenting-o &#125;,    转载: &#123;path: /categories/转载/, fa: fa-book &#125;  &#125; &#125;  清单: &#123; path: javascript:;, fa: fa-list-ul faa-vertical, submenus: &#123;     书单: &#123;path: /tags/悦读/, fa: fa-th-list faa-bounce &#125;,     番组: &#123;path: /bangumi/, fa: fa-film faa-vertical &#125;,     歌单: &#123;path: /music/, fa: fa-headphones &#125;,    图集: &#123;path: /tags/图集/, fa: fa-photo &#125;  &#125; &#125;  留言板: &#123; path: /comment/, fa: fa-pencil-square-o faa-tada &#125;  友人帐: &#123; path: /links/, fa: fa-link faa-shake &#125;  赞赏: &#123; path: /donate/, fa: fa-heart faa-pulse &#125;  关于: &#123; path: /, fa: fa-leaf faa-wrench , submenus: &#123;     我？: &#123;path: /about/, fa: fa-meetup&#125;,     主题: &#123;path: /theme-sakura/, fa: iconfont icon-sakura &#125;,    Lab: &#123;path: /lab/, fa: fa-cogs &#125;,  &#125; &#125;  客户端: &#123; path: /client/, fa: fa-android faa-vertical &#125;  RSS: &#123; path: /atom.xml, fa: fa-rss faa-pulse &#125;# Home page sort type: -1: newer first，1: older first. 【非】homePageSortType: -1# Home page article shown number) 【非】homeArticleShown: 10# 背景图片 【选】bgn: 8# startdash面板 url, title, desc img 【改】startdash:   - &#123;url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png&#125;  - &#123;url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg&#125;  - &#123;url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg&#125;# your site build time or founded date# 你的站点建立日期 【改】siteBuildingTime: 07/17/2018# 社交按钮(social)  url, img PC端配置 【改】social:  github: &#123;url: http://github.com/honjun, img: /img/social/github.png&#125;  sina: &#123;url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png&#125;  wangyiyun: &#123;url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png&#125;  zhihu: &#123;url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png&#125;  email: &#123;url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg&#125;  wechat: &#123;url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png&#125;# 社交按钮(msocial)  url, img 移动端配置 【改】msocial:  github: &#123;url: http://github.com/honjun, fa: fa-github, color: 333&#125;  weibo: &#123;url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39&#125;  qq: &#123;url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe&#125;# 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】donate:  alipay: /img/custom/donate/AliPayQR.jpg  wechat: /img/custom/donate/WeChanQR.jpg  wechatSQ: /img/custom/donate/WeChanSQ.jpg# 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【选】movies:  url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2  # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用  name: Unbroken.mp4# 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【选】aplayer:   id: 2660651585  server: netease  type: playlist  fixed: true  mini: false  autoplay: false  loop: all  order: random  preload: auto  volume: 0.7  mutex: true# Valine评论配置【选】valine: flasev_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHszv_appKey: mgOpfzbkHYqU92CV4IDlAUHQ</code></pre><h4 id="其他细节修改"><a href="#其他细节修改" class="headerlink" title="其他细节修改"></a><font size=3.5>其他细节修改</font></h4><h5 id="模块内容及背景"><a href="#模块内容及背景" class="headerlink" title="模块内容及背景"></a><font size=3>模块内容及背景</font></h5><p>这里用友人帐举例，在&#x2F;source&#x2F;links&#x2F;index.md进行修改内容及背景图片。其他模块内容及背景图片可在该目录下对应的md文件中修改。</p><pre><code>layout: linkstitle: linksdate: 2018-12-19 23:11:06keywords: 友人帐description: comments: truephotos: https://cdn.jsdelivr.net/gh/Bigdata-xy/cdn@1.02/img/banner/links.jpglinks:  - group: 个人项目    desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt;    items:    - url: /      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg      name: Google      desc: Google 镜像    - url: /      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg      name: Google      desc: Google 镜像  - group: 小伙伴们    desc: 欢迎交换友链 ꉂ(ˊᗜˋ)    items:    - url: /      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg      name: Google      desc: Google 镜像    - url: /      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg      name: Google      desc: Google 镜像</code></pre><h5 id="模块背景及布局"><a href="#模块背景及布局" class="headerlink" title="模块背景及布局"></a><font size=3>模块背景及布局</font></h5><p>友人帐的布局主要在&#x2F;themes&#x2F;sakura&#x2F;layout&#x2F;links.ejs，其他模块的布局在该目录下的ejs文件中修改。</p><h5 id="归档与清单的背景及描述"><a href="#归档与清单的背景及描述" class="headerlink" title="归档与清单的背景及描述"></a><font size=3>归档与清单的背景及描述</font></h5><p>在 &#x2F;themes&#x2F;sakura&#x2F;language&#x2F;zh-cn.yml修改：</p><pre><code>#category技术:    zh: 小肖要进步！~    en: Geek – Only for Love    img: https://cdn.jsdelivr.net/gh/Bigdata-xy/cdn@1.02/img/banner/coding.jpg生活:    zh: 生活的本质是当下    en: life is the most important    img: https://cdn.jsdelivr.net/gh/Bigdata-xy/cdn@1.02/img/banner/writing.jpg转载:    zh: 站在前辈的肩膀上    en: Bai piao lalalaaa    img: https://cdn.jsdelivr.net/gh/Bigdata-xy/cdn@1.02/img/banner/ziyuan.jpg资源:    zh: 快来，有好东西    en: Bai piao lalalaaa again    img: https://cdn.jsdelivr.net/gh/Bigdata-xy/cdn@1.02/img/banner/ziyuan.jpg随想:    zh: 一些小心思...    en: ddd    img: https://cdn.jsdelivr.net/gh/Bigdata-xy/cdn@1.02/img/banner/think.jpg#tag悦读:    img: https://cdn.jsdelivr.net/gh/Bigdata-xy/cdn@1.02/img/banner/reading.jpg图集:    img: https://cdn.jsdelivr.net/gh/Bigdata-xy/cdn@1.02/img/banner/photo.jpg    </code></pre><div align=center><p><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221029182922463.png" alt="image-20221029182922463"></p></div><div align=center><p><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221029182956726.png" alt="image-20221029182956726"></p></div><h5 id="底部内容修改"><a href="#底部内容修改" class="headerlink" title="底部内容修改"></a><font size=3>底部内容修改</font></h5><p>在&#x2F;themes&#x2F;Sakura&#x2F;layout_partial中可修改底部显示内容。</p><div align=center><p><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221029183458771.png" alt="image-20221029183458771"></p></div><h5 id="关于“我？”对话修改"><a href="#关于“我？”对话修改" class="headerlink" title="关于“我？”对话修改"></a><font size=3>关于“我？”对话修改</font></h5><p>在&#x2F;themes&#x2F;Sakura&#x2F;source&#x2F;js中的botui.js进行修改即可。</p><p><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/442BEBA6.png" alt="img" style="zoom: 50%;" />上面配置过程中若遇到问题，可查看官方文档，csdn，也可在首页其他平台进行私信，看到会及时回复<img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/442BEBA6.png" alt="img" style="zoom: 50%;" /></p><p><font size=1>注：在配置过程中可将要修改的对应文件备份后，进行修改查看各种修改后的效果，若改乱了可使用备份文件还原</font></p>]]></content>
    
    
    <summary type="html">Sakura主题的个性化配置</summary>
    
    
    
    <category term="技术" scheme="http://bigdata-xy.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="技术" scheme="http://bigdata-xy.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>【博客搭建1】基本框架搭建</title>
    <link href="http://bigdata-xy.github.io/post/%E5%8D%9A%E5%AE%A2%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA.html"/>
    <id>http://bigdata-xy.github.io/post/%E5%8D%9A%E5%AE%A2%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA.html</id>
    <published>2022-10-28T09:58:04.000Z</published>
    <updated>2022-10-28T13:23:43.295Z</updated>
    
    <content type="html"><![CDATA[<p>本博客站点利用hexo+github搭建，在此记录分享我是如何利用hexo+github一步步成功搭建静态博客，避免日后遗忘，且作为博客维护的参考指南，特此记录。同时也希望能帮助到需要的人。</p><h3 id="安装基本软件工具"><a href="#安装基本软件工具" class="headerlink" title="安装基本软件工具"></a>安装基本软件工具</h3><h4 id="Node-js安装及环境配置"><a href="#Node-js安装及环境配置" class="headerlink" title="Node.js安装及环境配置"></a>Node.js安装及环境配置</h4><p>Node.js安装，首先点击如下链接进行安装包的<a href="https://nodejs.org/dist/v12.19.0/node-v12.19.0-x64.msi">安装</a>，下载完成后，按照特别注明中的<a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">Node.js安装及环境配置</a>进行操作，即可完成Node环境配置。</p><h4 id="Git安装及配置"><a href="#Git安装及配置" class="headerlink" title="Git安装及配置"></a>Git安装及配置</h4><p>Node.js安装，首先点击如下链接进行安装包的<a href="https://nodejs.org/dist/v12.19.0/node-v12.19.0-x64.msi">安装</a>，下载完成后，按照<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">安装教程</a>进行操作，即可完成Git安装。</p><h4 id="检验上述工具是否安装成功"><a href="#检验上述工具是否安装成功" class="headerlink" title="检验上述工具是否安装成功"></a>检验上述工具是否安装成功</h4><p>打开Windows+R输入cmd，进入cmd窗口，之后输入<code>node -v</code>，检查node.js是否安装成功，出现如下版本号即安装成功。</p><div align=center><img width=500 hight = 1200 src="https://s2.loli.net/2022/02/05/F3q4g1MKHoYt2UD.png" alt="image-20220202143752125" style="zoom:80%;" /></div><p>之后，分别输入<code>npm -v</code>、<code>git --version</code>，进行检查，出现如下结果即安装完成。</p><div align=center><img width=500 hight = 1400  src="https://s2.loli.net/2022/02/05/67ZBSpVTtJyfi21.png" alt="image-20220202144234010" style="zoom:67%;" /></div><h4 id="Hexo的安装与检验"><a href="#Hexo的安装与检验" class="headerlink" title="Hexo的安装与检验"></a>Hexo的安装与检验</h4><p>安装Hexo，在自己认为合适的地方建了一个blog文件夹。然后通过命令行进入到该文件夹里面，确保路径简单且不要有中文。输入<code>npm install hexo -g</code>，开始安装。</p><p>安装后，输入hexo -v检测是否安装成功,出现下图即为安装成功。</p><div align=center><img width=300 hight = 400  src="https://s2.loli.net/2022/02/02/e5gkXI2VYRmhiwb.png" alt="image-20220202144926287" style="zoom:67%;" /></div><p><strong>在blog文件下</strong>右键打开Git Bash Here，输入如下代码：<code>hexo init #初始化hexo博客</code>，等待安装，若首次不成功，重复输入<code>hexo init</code>再次初始化。出现<code>INFO Start Blogging with Hexo!</code>即为安装成功。</p><p>在cmd中输入<code>npm install</code>，安装所需要的组件。</p><p>之后在Git Bash中输入<code>hexo g &amp;&amp; hexo s</code>，生成本地服务器。进入如下网址<a href="http://localhost:4000/">localhost:4000</a>：</p><div align=center><img src="https://s2.loli.net/2022/02/03/7aEFXugOqM6s9ev.png" alt="image-20220203140153270" style="zoom:50%;" /></div><p>即可查看个人本地博客：</p><div align=center><img src="https://s2.loli.net/2022/02/03/bFS3ZcXI15xmluV.png"  style="zoom: 25%;" /></div><p><font size= 1>注：如果页面一直无法跳转，那么可能端口被占用了。此时我们ctrl+c停止服务器，接着输入hexo server -p 端口号来改变端口号</font></p><h3 id="连接Hexo与Github"><a href="#连接Hexo与Github" class="headerlink" title="连接Hexo与Github"></a>连接Hexo与Github</h3><h4 id="Github建立项目"><a href="#Github建立项目" class="headerlink" title="Github建立项目"></a>Github建立项目</h4><p>首先创建一个GitHub账号，创建完成后，进入账号主页面，点击左上角的new创建一个新的仓库。</p><div align=center><img src="https://s2.loli.net/2022/02/02/5TV6gj1y9OpZqwU.png" alt="image-20220202152215098" style="zoom:50%;" /></div><p>进入编辑仓库页面后，编辑如下：</p><div align=center><img src="https://s2.loli.net/2022/02/02/X8qFxyPJT9WB4od.png" alt="image-20220202153026689" style="zoom: 33%;" /></div><ol><li>编辑仓库名字，统一格式：xxx[^github注册名] .github.io，此处xxx一定要为github注册名</li><li>点击Add a README file</li><li>点击Create a license创建新的仓库</li></ol><p>上述操作之后，该项目已经被部署到网络上，通过<code>xxx.github.io</code>能够进行访问。</p><h4 id="连接Hexo与Github-1"><a href="#连接Hexo与Github-1" class="headerlink" title="连接Hexo与Github"></a>连接Hexo与Github</h4><p>将Hexo与Github page练习起来，设置Git的user name和email。</p><p>首先在blog文件夹里面右键，点击Git Bash Here。分别输入如下代码，这里的用户名和邮箱改为自己的。</p><pre><code>git config -global user.name &quot;Bigdata-xy&quot;git config -global user.name &quot;2456...@qq.com&quot;</code></pre><p>输入<strong>cd ~&#x2F;.ssh</strong>，并输入<strong>ls</strong>进行查看。</p><div align = center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221028203825116.png" alt="image-20221028203825116" style="zoom:67%;" /></div><p>之后，再输入如下命令：</p><pre><code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code></pre><p>这里的邮件地址为申请GitHub的邮件地址。ssh密钥生成。</p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221028195743624.png" alt="image-20221028195743624" style="zoom:50%;" /></div><p>连续三次回车，生成密钥，最后得到两个文件：<strong>id_rsa</strong>和<strong>id_rsa.pub</strong></p><div align= center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221028200324720.png" alt="image-20221028200324720" style="zoom: 50%;" /></div><p>接着输入<code>eval “$(ssh-agent -s)”</code>，回车，添加密钥到ssh-agent </p><p>再输入<code>ssh-add ~/.ssh/id_rsa</code>，回车，添加生成的SSH key到ssh-agent </p><p>接着登录Github，点击头像下的settings，点击new ssh key新建钥匙，名字随意输入，key栏粘贴之前在id_rsa.pub中的代码。</p><div align=center><img src="https://s2.loli.net/2022/02/05/cAKCRgFt2jOJXqV.png" alt="image-20220203133656534" style="zoom:50%;" /></div><p>在.ssh路径下输入<code>cat id_rsa.pub</code>可查看并复制上述key所需的内容。</p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221028201020894.png" alt="image-20221028201020894" style="zoom: 50%;" /></div><p>输入<code>ssh -T git@github.com</code>，测试添加ssh是否成功，如果看到Hi后面接你的用户名，即为成功。</p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221028201355298.png" alt="image-20221028201355298" style="zoom:67%;" /></div><h4 id="修改Deployment值"><a href="#修改Deployment值" class="headerlink" title="修改Deployment值"></a>修改Deployment值</h4><p>在blog文件中找到**_config.yml**文件，修改Deployment值（在末尾），将</p><pre><code>deploy:  type:</code></pre><p>更改为：</p><pre><code>deploy:  type: git  repository: git@github.com:xxxx/xxxx.github.io.git  branch: master</code></pre><p>repository值是你在github项目里的https（右下角）</p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221028204347688.png" alt="image-20221028204347688" style="zoom:67%;" /></div><h3 id="完成建站并新建博客"><a href="#完成建站并新建博客" class="headerlink" title="完成建站并新建博客"></a>完成建站并新建博客</h3><p>新建一篇博客，在blog文件下右键Git Bash Here，输入<code>hexo new &quot;博客名&quot;</code>，你就可以在blog&#x2F;source&#x2F;_posts中找到已创建的文件。或者你直接在上述路径下创建md文件编写一篇新博客。Markdown文件的编写方式留个坑，之后有时间再写。</p><p>在生成以及部署文章之前，需要安装一个扩展，在Git中输入<code>npm install hexo-deployer-git —save</code>，并将刚刚生成的文件编辑好后输入<code>hexo g &amp;&amp; hexo d</code>即可生成部署文章。</p><p>至此，一个具备基础功能的博客就完成了，可以通过<code>用户名.github.io</code>进行访问。</p><h3 id="绑定自己的域名"><a href="#绑定自己的域名" class="headerlink" title="绑定自己的域名"></a>绑定自己的域名</h3><p>这部分可有可无，域名可增加博客的个性化。</p><h4 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h4><p>国内的域名服务商有新网，腾讯云，还有阿里云的万网等。下面以阿里云的万网为例： 在万网购买了自己心仪的域名后，进入阿里云的管理控制台-域名与网站-域名就可以看到购买的域名此时的域名状态是未实名认证的，然后就是实名认证（一般需要2小时左右）。</p><h4 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h4><p>首先获取自己 github 的二级域名的 IP地址，windows 下直接在 cmd 里 Ping 一下自己的博客就会得到 IP 地址：</p><p><code>ping username.github.io</code>,其中username为自己的github用户名</p><p>下面通过 DNS域名解析将购买的域名指向 github 的二级域名：username.github.io，进入阿里云的管理控制台-域名与网站-云解析 DNS，进入域名的解析设置，点击新手指导，将得到的 IP 地址填到记录值一栏，点击确定就 OK 了。填完以后的解析列表会出现：</p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221028210944911.png" alt="image-20221028210944911" style="zoom:67%;" /></div><h4 id="设置CNAME"><a href="#设置CNAME" class="headerlink" title="设置CNAME"></a>设置CNAME</h4><p>在本地hexo 项目下，source 文件夹下面创建 CNAME 文件（没有后缀名的），在里面写上购买的域名。比如：</p><div align=center><p><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221028211124194.png" alt="image-20221028211124194"></p></div><p>在 github 上面，打开 username.github.io 项目的（Settings）设置，然后在 GitHub Pages的 Custom domain设置里填上购买的域名。比如：</p><div align=center><img src="https://raw.githubusercontent.com/Bigdata-xy/cdn/main/img/article_content/image-20221028211212747.png" alt="image-20221028211212747" style="zoom:67%;" /></div><p>这样新域名配置完成，可以使用新的网名访问自己的博客了</p><p>至此，博客的基本框架搭建完成，在博客搭建2、3中会分别介绍【Sakura主题的配置】及【Sakura主题下博客的编写操作】，使得个人博客更具特殊。</p>]]></content>
    
    
    <summary type="html">hexo+github个人博客基本框架构建记录</summary>
    
    
    
    <category term="技术" scheme="http://bigdata-xy.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="技术" scheme="http://bigdata-xy.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-World</title>
    <link href="http://bigdata-xy.github.io/post/695b.html"/>
    <id>http://bigdata-xy.github.io/post/695b.html</id>
    <published>2022-10-25T16:19:01.000Z</published>
    <updated>2022-10-29T11:02:34.053Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-python"><code class="language-python">hexo new <span class="token string">"My New Post"</span>！！！</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">blog网站技术模块测试</summary>
    
    
    
    <category term="技术" scheme="http://bigdata-xy.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="web" scheme="http://bigdata-xy.github.io/tags/web/"/>
    
    <category term="悦读" scheme="http://bigdata-xy.github.io/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
</feed>
